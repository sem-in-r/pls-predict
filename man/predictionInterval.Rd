% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictionInterval.R
\name{predictionInterval}
\alias{predictionInterval}
\title{PIntervals generates Prediction Intervals for SEMinR PLS models}
\usage{
predictionInterval(model, testData, technique, PIprobs, noBoots, cores)
}
\arguments{
\item{model}{A SEMinR model that has been trained on the training data}

\item{testData}{The testdata for which prediction intervals will be generated.}

\item{technique}{The predictive technique to be employed, Earliest Antecedents (EA) \code{predict_EA} or
Direct Antecedents (DA) \code{predict_DA}}

\item{PIprobs}{The required confidence level for prediction intervals. Default is 0.9 (10 percent)}

\item{noBoots}{The number of bootstraps to perform. Default is 200.}

\item{cores}{The number of cores to perform parallel bootstrapping on.}
}
\description{
\code{validatePredict} generates average-case and case-wise prediction intervals for PLS models generated by SEMinR.
}
\details{
This function generates average-case and case-wise prediction intervals for PLS models generated by SEMinR.
}
\examples{
library(seminr)
data(mobi)
trainData <- mobi[1:200,]
testData <- mobi[201:250,]

# seminr syntax for creating measurement model
mobi_mm <- constructs(
  composite("Image",        multi_items("IMAG", 1:5)),
  composite("Expectation",  multi_items("CUEX", 1:3)),
  composite("Value",        multi_items("PERV", 1:2)),
  composite("Satisfaction", multi_items("CUSA", 1:3))
)

mobi_sm <- relationships(
  paths(to = "Satisfaction",
        from = c("Image", "Expectation", "Value"))
)

mobi_train <- estimate_pls(trainData, mobi_mm, interactions = NULL, mobi_sm)
prediction_intervals <- predictionInterval(model = mobi_train, testData = testData, cores = 2)

}
